{"version":3,"file":"JettonMinter.js","sources":["../../../src/contracts/core/JettonMinter.ts"],"sourcesContent":["import { type ContractProvider, beginCell } from \"@ton/ton\";\n\nimport { Contract } from \"@/contracts/core/Contract\";\nimport type { AddressType } from \"@/types\";\nimport { toAddress } from \"@/utils/toAddress\";\n\nexport class JettonMinter extends Contract {\n  async getWalletAddress(\n    provider: ContractProvider,\n    ownerAddress: AddressType,\n  ) {\n    const result = await provider.get(\"get_wallet_address\", [\n      {\n        type: \"slice\",\n        cell: beginCell().storeAddress(toAddress(ownerAddress)).endCell(),\n      },\n    ]);\n\n    return result.stack.readAddress();\n  }\n\n  async getJettonData(provider: ContractProvider) {\n    const result = await provider.get(\"get_jetton_data\", []);\n\n    const jettonData = {\n      totalSupply: result.stack.readBigNumber(),\n      canIncSupply: Boolean(result.stack.readNumber()),\n      adminAddress: result.stack.readAddressOpt(),\n      contentRaw: result.stack.readCell(),\n      jettonWalletCode: result.stack.readCell(),\n    };\n\n    return jettonData;\n  }\n}\n"],"names":[],"mappings":";;;AAMO,MAAM,qBAAqB,SAAS;AAAA,EACzC,MAAM,iBACJ,UACA,cACA;AACA,UAAM,SAAS,MAAM,SAAS,IAAI,sBAAsB;AAAA,MACtD;AAAA,QACE,MAAM;AAAA,QACN,MAAM,YAAY,aAAa,UAAU,YAAY,CAAC,EAAE,QAAQ;AAAA,MAClE;AAAA,IAAA,CACD;AAEM,WAAA,OAAO,MAAM;EACtB;AAAA,EAEA,MAAM,cAAc,UAA4B;AAC9C,UAAM,SAAS,MAAM,SAAS,IAAI,mBAAmB,CAAE,CAAA;AAEvD,UAAM,aAAa;AAAA,MACjB,aAAa,OAAO,MAAM,cAAc;AAAA,MACxC,cAAc,QAAQ,OAAO,MAAM,YAAY;AAAA,MAC/C,cAAc,OAAO,MAAM,eAAe;AAAA,MAC1C,YAAY,OAAO,MAAM,SAAS;AAAA,MAClC,kBAAkB,OAAO,MAAM,SAAS;AAAA,IAAA;AAGnC,WAAA;AAAA,EACT;AACF;"}